# Use a minimal base image with CUDA support
FROM nvidia/cuda:12.6.0-cudnn-devel-ubuntu22.04 AS builder

# Set working directory
WORKDIR /app

# Set environment variables for security and performance
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PYTHONPATH=/app/src \
    DEBIAN_FRONTEND=noninteractive

# Install only essential system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    python3.10-dev \
    python3-pip \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip and install build tools securely
RUN python3.10 -m pip install --upgrade pip setuptools wheel

# Copy and install requirements
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Final stage for runtime
FROM nvidia/cuda:12.6.0-cudnn-runtime-ubuntu22.04

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    && ln -sf /usr/bin/python3.10 /usr/bin/python \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy Python environment from builder
COPY --from=builder /usr/local/lib/python3.10/dist-packages/ /usr/local/lib/python3.10/dist-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

# Copy application code with restricted permissions
COPY --chown=1000:1000 . .

# Create group and user with specific UID/GID, then set permissions
RUN groupadd -g 1000 appgroup \
    && useradd -r -u 1000 -g 1000 -s /bin/false appuser \
    && chown -R appuser:appgroup /app \
    && chmod -R 750 /app

# Switch to non-root user
USER appuser

# Restrict environment variables exposure
ENV PATH="/usr/local/bin:/usr/bin" \
    PYTHONPATH="/app/src"

# Healthcheck with restricted privileges
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD ["python", "-c", "import requests; requests.get('http://localhost:7860/health').raise_for_status()"] || exit 1

# Expose port
EXPOSE 7860

# Run with gunicorn and security flags
CMD ["gunicorn", "--bind", "0.0.0.0:7860", "--workers", "4", "--worker-class", "uvicorn.workers.UvicornWorker", \
     "--timeout", "120", "--keep-alive", "5", "--log-level", "info", "--access-logfile", "-", \
     "--config", "/app/gunicorn_conf.py", "src.main:app"]